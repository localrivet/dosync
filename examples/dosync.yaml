# DOSync Configuration File
# Controls image policy and registry credentials for the DOSync tool

registry:
  dockerhub:
    username: ${DOCKERHUB_USERNAME}
    password: ${DOCKERHUB_PASSWORD}
    imagePolicy:
      policy:
        semver: {} # Use highest semver tag

  ghcr:
    token: ${GITHUB_TOKEN}
    imagePolicy:
      filterTags:
        pattern: '^v(?P<semver>[0-9]+\.[0-9]+\.[0-9]+)$' # Match vX.Y.Z format
        extract: "$semver" # Extract just the version part
      policy:
        semver:
          range: ">=1.0.0 <2.0.0" # Only use 1.x versions

  docr:
    token: ${DO_TOKEN}
    imagePolicy:
      filterTags:
        pattern: '^main-[a-zA-F0-9]+-(?P<ts>\d+)$' # Match main-hash-timestamp format
        extract: "$ts" # Extract the timestamp
      policy:
        numerical:
          order: desc # Highest number (newest)

  gcr:
    credentials_file: /path/to/gcp.json # Or use environment variables
    imagePolicy:
      filterTags:
        pattern: ".*-rc.*" # Include release candidates
      policy:
        semver:
          range: ">=2.0.0-0" # Include pre-releases in 2.x

  ecr:
    aws_access_key_id: ${AWS_ACCESS_KEY_ID}
    aws_secret_access_key: ${AWS_SECRET_ACCESS_KEY}
    region: us-east-1
    imagePolicy:
      filterTags:
        pattern: '^(?P<semver>[0-9]*\.[0-9]*\.[0-9]*)-(?P<distro>.*)$' # Match version-distro format
        extract: "$semver" # Extract just the version part
      policy:
        semver:
          range: ">=1.0.0" # Only stable releases

  quay:
    token: ${QUAY_TOKEN}
    imagePolicy:
      filterTags:
        pattern: '^RELEASE\.(?P<timestamp>.*)Z$' # Match RELEASE.DATE format
        extract: "$timestamp" # Extract the date part
      policy:
        alphabetical:
          order: desc # Newest first

  harbor:
    url: https://harbor.example.com
    username: ${HARBOR_USERNAME}
    password: ${HARBOR_PASSWORD}
    imagePolicy:
      policy:
        alphabetical:
          order: desc # Latest alphabetically

  acr:
    tenant_id: your-tenant-id
    client_id: your-client-id
    client_secret: ${AZURE_CLIENT_SECRET}
    registry: myregistry.azurecr.io
    imagePolicy:
      policy:
        semver: {} # Use highest semver tag

  custom:
    url: https://registry.example.com
    username: ${CUSTOM_USERNAME}
    password: ${CUSTOM_PASSWORD}
    imagePolicy:
      filterTags:
        pattern: '^prod-(?P<date>\d{8})$' # Match prod-YYYYMMDD format
        extract: "$date"
      policy:
        numerical:
          order: desc # Latest date wins
